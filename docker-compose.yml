services:
  php:
    image: "storeframe/php:${PHP_VERSION}"
    container_name: php
    restart: unless-stopped
    user: root # Fix permission issue
    volumes:
      - "~/Sites:/var/www"
      - "~/Docker/general/php/php.ini:/usr/local/etc/php/php.ini"
      - "~/Docker/general/msmtprc:/etc/msmtprc"
      - "~/.ssh:/var/www/.ssh:ro"
      - "~/Docker/general/bin/magerun:/usr/local/bin/magerun:ro"
      - "~/Docker/general/bin/docker:/usr/local/bin/docker:ro"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "~/Docker/general/bin/npm:/usr/local/bin/npm"
      - "~/Docker/general/bin/mysql:/usr/local/bin/mysql"
      - "~/Docker/general/bin/mysqldump:/usr/local/bin/mysqldump"
    networks:
      - revproxy

  mariadb:
    image: "mariadb:${MARIADB_VERSION}"
    container_name: mariadb
    restart: unless-stopped
    ports:
      - "3306:3306"
    environment:
      MYSQL_HOST: "mariadb"
      MYSQL_DATABASE: "magento"
      MYSQL_USER: "root"
      MYSQL_PASSWORD: "root"
      MYSQL_ROOT_PASSWORD: "root"
      MYSQL_ALLOW_EMPTY_PASSWORD: "0"
    command:
      - --character-set-server=utf8
      - --collation-server=utf8_general_ci
      - --optimizer_switch=rowid_filter=off
      - --optimizer_use_condition_selectivity=1
      - --explicit_defaults_for_timestamp=on
      - --innodb_buffer_pool_size=4G
      - --max_allowed_packet=256M
      - --max_heap_table_size=256M
      - --tmp_table_size=256M
    volumes:
      - "~/Sites:/var/www"
      - "~/Docker/general/mariadb/var/lib/mysql:/var/lib/mysql"
    networks:
      - revproxy

  # elasticsearch:
  #   image: "storeframe/elasticsearch:${ELASTICSEARCH_VERSION}"
  #   container_name: elasticsearch
  #   restart: unless-stopped
  #   # ports:
  #   #   - "9200:9200"
  #   #   - "9300:9300"
  #   environment:
  #     - discovery.type=single-node
  #     - cluster.routing.allocation.disk.threshold_enabled=false
  #     - indices.id_field_data.enabled=true
  #     - xpack.security.enabled=false
  #     - ES_JAVA_OPTS=-Xms1g -Xmx1g
  #   tmpfs:
  #     - "/tmp:rw"
  #   networks:
  #     - revproxy

  opensearch:
    image: "storeframe/opensearch:${OPENSEARCH_VERSION}"
    container_name: opensearch
    restart: unless-stopped
    # ports:
    #   - "9200:9200"
    #   - "9300:9300"
    environment:
      - discovery.type=single-node
      - cluster.routing.allocation.disk.threshold_enabled=false
      - indices.id_field_data.enabled=true
      - DISABLE_SECURITY_PLUGIN=true
      - ES_JAVA_OPTS=-Xms1g -Xmx1g
    tmpfs:
      - "/tmp:rw"
    networks:
      - revproxy

  nodejs:
    image: "storeframe/nodejs:${NODEJS_VERSION}"
    container_name: nodejs
    restart: unless-stopped
    volumes:
      - "~/Sites:/var/www"
      - "~/Docker/general/bin/php:/usr/local/bin/php:ro"
      - "~/Docker/general/bin/docker:/usr/local/bin/docker:ro"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    networks:
      - revproxy

  redis:
    image: "redis:${REDIS_VERSION}-alpine"
    container_name: redis
    restart: unless-stopped
    tmpfs:
      - "/data:rw"
    networks:
      - revproxy

  nginx:
    image: "storeframe/nginx:${NGINX_VERSION}"
    container_name: nginx
    restart: unless-stopped
    user: root
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "~/Sites:/var/www"
      - "~/Docker/general/nginx/etc/nginx/conf.d:/usr/local/openresty/nginx/conf/conf.d"
      - "~/Docker/general/nginx/etc/nginx/nginx.conf:/usr/local/openresty/nginx/conf/nginx.conf"
      - "~/Docker/general/nginx/etc/nginx/sites-available:/usr/local/openresty/nginx/conf/sites-available"
      - "~/Docker/general/nginx/etc/nginx/sites-enabled:/usr/local/openresty/nginx/conf/sites-enabled"
    networks:
      - revproxy

  dnsmasq:
    image: "jpillora/dnsmasq"
    container_name: dnsmasq
    restart: unless-stopped
    ports:
      - "53:53/udp"
    volumes:
      - "~/Docker/general/dnsmasq/etc/dnsmasq.conf:/etc/dnsmasq.conf"
    cap_add:
      - NET_ADMIN
    networks:
      - revproxy

  dind:
    image: "docker:dind"
    container_name: dind
    restart: unless-stopped
    privileged: true
    ports:
      - "2375:2375"
    command: dockerd --host=tcp://0.0.0.0:2375 --host=unix:///var/run/docker.sock
    environment:
      - DOCKER_TLS_CERTDIR=""
    networks:
      - revproxy

  mailpit:
    image: "axllent/mailpit"
    container_name: mailpit
    restart: unless-stopped
    environment:
      MP_MAX_MESSAGES: "5000"
      MP_DATA_FILE: "/data/mailpit.db"
      MP_SMTP_AUTH_ACCEPT_ANY: "1"
      MP_SMTP_AUTH_ALLOW_INSECURE: "1"
    volumes:
      - "~/Docker/general/mailpit/data:/data"
    networks:
      - revproxy

  phpmyadmin:
    image: "phpmyadmin"
    container_name: phpmyadmin
    restart: unless-stopped
    environment:
      PMA_ARBITRARY: "1"
      PMA_HOST: "mariadb"
      PMA_PORT: "3306"
    networks:
      - revproxy

  odoo:
    image: odoo:18.0
    container_name: odoo
    restart: unless-stopped
    environment:
      HOST: "pg_odoo"
      USER: "root"
      PASSWORD: "root"
    volumes:
      - "~/Docker/general/odoo/var/lib/odoo:/var/lib/odoo"
    depends_on:
      - pg_odoo
    networks:
      - revproxy
  pg_odoo:
    image: postgres:17
    container_name: pg_odoo
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: "root"
      POSTGRES_PASSWORD: "root"
      POSTGRES_DB: "postgres"
    volumes:
      - "~/Docker/general/pg_odoo/var/lib/postgresql/data:/var/lib/postgresql/data"
    networks:
      - revproxy
  backend:
    image: frappe/erpnext:v15.62.0
    networks:
      - revproxy
    deploy:
      restart_policy:
        condition: on-failure
    volumes:
      - sites:/home/frappe/frappe-bench/sites
      - logs:/home/frappe/frappe-bench/logs
    environment:
      DB_HOST: "db"
      DB_PORT: "3306"
      MYSQL_ROOT_PASSWORD: "admin"
      MARIADB_ROOT_PASSWORD: "admin"

  configurator:
    image: frappe/erpnext:v15.62.0
    networks:
      - revproxy
    deploy:
      restart_policy:
        condition: none
    entrypoint:
      - bash
      - -c
    command:
      - >
        ls -1 apps > sites/apps.txt;
        bench set-config -g db_host $$DB_HOST;
        bench set-config -gp db_port $$DB_PORT;
        bench set-config -g redis_cache "redis://$$REDIS_CACHE";
        bench set-config -g redis_queue "redis://$$REDIS_QUEUE";
        bench set-config -g redis_socketio "redis://$$REDIS_QUEUE";
        bench set-config -gp socketio_port $$SOCKETIO_PORT;
    environment:
      DB_HOST: "db"
      DB_PORT: "3306"
      REDIS_CACHE: "redis-cache:6379"
      REDIS_QUEUE: "redis-queue:6379"
      SOCKETIO_PORT: "9000"
    volumes:
      - sites:/home/frappe/frappe-bench/sites
      - logs:/home/frappe/frappe-bench/logs

  create-site:
    image: frappe/erpnext:v15.62.0
    networks:
      - revproxy
    deploy:
      restart_policy:
        condition: none
    volumes:
      - sites:/home/frappe/frappe-bench/sites
      - logs:/home/frappe/frappe-bench/logs
    entrypoint:
      - bash
      - -c
    command:
      - >
        wait-for-it -t 120 db:3306;
        wait-for-it -t 120 redis-cache:6379;
        wait-for-it -t 120 redis-queue:6379;
        export start=`date +%s`;
        until [[ -n `grep -hs ^ sites/common_site_config.json | jq -r ".db_host // empty"` ]] && \
          [[ -n `grep -hs ^ sites/common_site_config.json | jq -r ".redis_cache // empty"` ]] && \
          [[ -n `grep -hs ^ sites/common_site_config.json | jq -r ".redis_queue // empty"` ]];
        do
          echo "Waiting for sites/common_site_config.json to be created";
          sleep 5;
          if (( `date +%s`-start > 120 )); then
            echo "could not find sites/common_site_config.json with required keys";
            exit 1
          fi
        done;
        echo "sites/common_site_config.json found";
        bench new-site --mariadb-user-host-login-scope='%' --admin-password=admin --db-root-username=root --db-root-password=admin --install-app erpnext --set-default frontend;

  db:
    image: mariadb:10.6
    networks:
      - revproxy
    healthcheck:
      test: mysqladmin ping -h localhost --password=admin
      interval: 1s
      retries: 20
    deploy:
      restart_policy:
        condition: on-failure
    command:
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
      - --skip-character-set-client-handshake
      - --skip-innodb-read-only-compressed # Temporary fix for MariaDB 10.6
    environment:
      MYSQL_ROOT_PASSWORD: "admin"
      MARIADB_ROOT_PASSWORD: "admin"
    volumes:
      - db-data:/var/lib/mysql

  frontend:
    image: frappe/erpnext:v15.62.0
    container_name: frappe
    networks:
      - revproxy
    depends_on:
      - websocket
    deploy:
      restart_policy:
        condition: on-failure
    command:
      - nginx-entrypoint.sh
    environment:
      BACKEND: "backend:8000"
      FRAPPE_SITE_NAME_HEADER: "frontend"
      SOCKETIO: "websocket:9000"
      UPSTREAM_REAL_IP_ADDRESS: "127.0.0.1"
      UPSTREAM_REAL_IP_HEADER: "X-Forwarded-For"
      UPSTREAM_REAL_IP_RECURSIVE: "off"
      PROXY_READ_TIMEOUT: "120"
      CLIENT_MAX_BODY_SIZE: "50m"
    volumes:
      - sites:/home/frappe/frappe-bench/sites
      - logs:/home/frappe/frappe-bench/logs
    ports:
      - "8080:8080"

  queue-long:
    image: frappe/erpnext:v15.62.0
    networks:
      - revproxy
    deploy:
      restart_policy:
        condition: on-failure
    command:
      - bench
      - worker
      - --queue
      - long,default,short
    volumes:
      - sites:/home/frappe/frappe-bench/sites
      - logs:/home/frappe/frappe-bench/logs

  queue-short:
    image: frappe/erpnext:v15.62.0
    networks:
      - revproxy
    deploy:
      restart_policy:
        condition: on-failure
    command:
      - bench
      - worker
      - --queue
      - short,default
    volumes:
      - sites:/home/frappe/frappe-bench/sites
      - logs:/home/frappe/frappe-bench/logs

  redis-queue:
    image: redis:6.2-alpine
    networks:
      - revproxy
    deploy:
      restart_policy:
        condition: on-failure
    volumes:
      - redis-queue-data:/data

  redis-cache:
    image: redis:6.2-alpine
    networks:
      - revproxy
    deploy:
      restart_policy:
        condition: on-failure

  scheduler:
    image: frappe/erpnext:v15.62.0
    networks:
      - revproxy
    deploy:
      restart_policy:
        condition: on-failure
    command:
      - bench
      - schedule
    volumes:
      - sites:/home/frappe/frappe-bench/sites
      - logs:/home/frappe/frappe-bench/logs

  websocket:
    image: frappe/erpnext:v15.62.0
    networks:
      - revproxy
    deploy:
      restart_policy:
        condition: on-failure
    command:
      - node
      - /home/frappe/frappe-bench/apps/frappe/socketio.js
    volumes:
      - sites:/home/frappe/frappe-bench/sites
      - logs:/home/frappe/frappe-bench/logs

volumes:
  db-data:
  redis-queue-data:
  sites:
  logs:

networks:
  revproxy:
    driver: bridge
    ipam:
      config:
        - subnet: 172.168.0.0/24